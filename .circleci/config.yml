---
common-steps:
  - &rebaseontarget
    run:
      name: Rebase on top of GitHub target branch
      command: ./devops/scripts/rebase-ci.sh

  - &installenchant
    run:
      name: Install enchant
      command: sudo apt-get update && sudo apt-get install -y enchant

  - &createcachedir
    run:
      name: Ensure cache dir exists and permissions are good
      command: |
        sudo mkdir -p /caches && sudo chown circleci: -R /caches

  - &restorecache
    restore_cache:
      key: v1-sd-layers-{{ checksum "securedrop/dockerfiles/focal/python3/Dockerfile" }}
      paths:
        - /caches/layers.tar.gz

  - &loadimagelayers
    run:
      name: Load image layer cache
      command: |
        set +o pipefail
        docker load -i /caches/layers.tar || true

  - &dockerimagebuild
    run:
      name: Build Docker images
      command: |
        set +o pipefail
        docker images
        fromtag=$(docker images |grep securedrop-test-focal-py3 |head -n1 |awk '{print $2}')
        cd securedrop && DOCKER_BUILD_VERBOSE=true DOCKER_BUILD_ARGUMENTS="--cache-from securedrop-test-focal-py3:${fromtag:-latest}" ./bin/dev-shell true

  - &saveimagelayers
    run:
      name: Save Docker image layer cache
      command: |
        docker images
        docker save -o /caches/layers.tar securedrop-test-focal-py3:latest

  - &savecache
    save_cache:
      key: v1-sd-layers-{{ checksum "securedrop/dockerfiles/focal/python3/Dockerfile" }}
      paths:
        - /caches/layers.tar

version: 2.1
orbs:
  slack: circleci/slack@4.4.4

slack-fail-post-step: &slack-fail-post-step
  post-steps:
    - run:
        name: Slack - Skip from Forks
        command: |
          if [ -z "$SLACK_ACCESS_TOKEN" ]; then
            circleci-agent step halt
          fi
    - slack/notify:
        channel: C01EY9C1X45
        event: fail
        template: basic_fail_1

jobs:
  lint:
    machine:
      image: ubuntu-2004:current
      enabled: true
    environment:
      DOCKER_API_VERSION: 1.24
      BASE_OS: focal
    steps:
      - checkout
      - *rebaseontarget
      - *createcachedir
      - *restorecache
      - *loadimagelayers
      - *dockerimagebuild
      - *saveimagelayers
      - *savecache
      - *installenchant

      - run:
          name: Run all linters
          command: |
            fromtag=$(docker images |grep securedrop-test-focal-py3 |head -n1 |awk '{print $2}')
            DOCKER_BUILD_ARGUMENTS="--cache-from securedrop-test-focal-py3:${fromtag:-latest}" securedrop/bin/dev-shell \
                  bash -c "/opt/venvs/securedrop-app-code/bin/pip3 install --require-hashes -r requirements/python3/develop-requirements.txt && make -C .. lint"

      - run:
          name: Check that translation machine objects are reproducible
          command: |
            fromtag=$(docker images |grep securedrop-test-focal-py3 |head -n1 |awk '{print $2}')
            DOCKER_BUILD_ARGUMENTS="--cache-from securedrop-test-focal-py3:${fromtag:-latest}" securedrop/bin/dev-shell \
                  bash -c "/opt/venvs/securedrop-app-code/bin/pip3 install --require-hashes -r requirements/python3/develop-requirements.txt && make -C .. verify-mo"

  staging-test-with-rebase:
    machine:
      image: ubuntu-2004:current
      enabled: true

    working_directory: ~/sd
    steps:
      - checkout
      - *rebaseontarget
      - *installenchant

      - run:
          name: Run Staging tests on GCE
          command: |
            make ci-go
          no_output_timeout: 35m

      - run:
          name: Ensure environment torn down
          # Always report true, since env should will destroyed already
          # if all tests passed.
          command: make ci-teardown || true
          when: always

      - store_test_results:
          path: ~/sd/junit

      - store_artifacts:
          path: ~/sd/junit

workflows:
  version: 2
  securedrop_ci:
    jobs:
      - lint:
          context:
            - circleci-slack
          <<: *slack-fail-post-step
      - staging-test-with-rebase:
          filters:
            branches:
              only: /(stg-|release\/).*/
          requires:
            - lint
          context:
            - circleci-slack
          <<: *slack-fail-post-step

  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - staging-test-with-rebase
