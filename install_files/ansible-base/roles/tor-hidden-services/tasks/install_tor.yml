---
- name: Install Tor project GPG signing key.
  apt_key:
    state: present
    data: "{{ lookup('file', 'tor-signing-key.pub') }}"
  tags:
    - apt
    - tor

- name: Setup Tor apt repo.
  apt_repository:
    repo: deb http://deb.torproject.org/torproject.org {{ ansible_lsb.codename }} main
    state: present
  register: add_tor_apt_repo
  tags:
    - apt
    - tor

- name: Update apt cache.
  apt:
    update_cache: yes
  when: add_tor_apt_repo.changed

- name: Install Tor and Tor keyring packages.
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - deb.torproject.org-keyring
    - tor
  tags:
    - apt
    - tor
# Remove official Tor apt repo key, so only the SecureDrop Release
# Signing Key is used, for the FPF tor apt mirror

- name: Extract tor version
  shell: |
    apt-cache policy tor | sed -e 's/^\s*Installed:\ \(\S*\)/\1/g;tx;d;:x'
  changed_when: false
  register: extract_tor_version

# Ubuntu upstream repositories serve a version of tor that is very old. Since
# FPF apt servers host this same package, let's ensure that the FPF-provided
# Tor package is installed by checking we are using a recent version.

- name: Ensure correct Tor version installed.
  assert:
    that: extract_tor_version.stdout is version('0.3.4.9', '>=')
    fail_msg: "Tor package was not found on FPF apt server."

- name: Dump Tor version to file (for reporting)
  copy:
    dest: "{{ playbook_dir }}/../../.tor_version"
    content: "{{ extract_tor_version.stdout }}"
  delegate_to: localhost
  run_once: true
  become: "no"
  when: "'amazon' in ansible_product_version"
